name: release

on:
  workflow_dispatch:

env:
  VERSION: "0.1.${{ github.run_number }}"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install rust tool chain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt, clippy
          target: x86_64-unknown-linux-musl

      - name: Install required tools
        run: sudo apt update && sudo apt install musl-tools -y

      - name: Lint the code
        run: cargo clippy

      - name: Run the security audit check
        run: cargo audit

      - name: Run the tests with the static target for the debug build
        run: cargo test --target x86_64-unknown-linux-musl

      - name: Build the final binaries
        run: |
          cargo build --release --target x86_64-unknown-linux-musl && mv ./target/x86_64-unknown-linux-musl/release/httpget httpget
          cargo build --release --target x86_64-unknown-linux-musl --features tls && mv ./target/x86_64-unknown-linux-musl/release/httpget httpget-tls

      - name: Set the crate version
        run: cargo set-version ${{ env.VERSION }}

      - name: Publish the crate
        run: cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Publish the final binary as a release
        run: |
          gh release create --latest \
            -n "Latest version of httpget, compiled for target x86_64-unknown-linux-musl" \
            -t "HttpGet v${{ env.VERSION}}" \
            ${{ env.VERSION }} \
            httpget*
        env:
          GH_TOKEN: ${{ github.token }}
