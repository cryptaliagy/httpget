name: release

on:
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install rust tool chain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt, clippy
          target: x86_64-unknown-linux-musl

      - name: Lint the code
        run: cargo clippy

      - name: Run the security audit check, ignoring known issue that is not relevant for this project
        run: cargo audit

      - name: Run the tests with the static target for the debug build
        run: cargo test --target x86_64-unknown-linux-musl

      - name: Run the tests with the static target for release build
        run: cargo test --release --target x86_64-unknown-linux-musl

      - name: Build the final binary
        run: cargo build --release --target x86_64-unknown-linux-musl && strip ./target/x86_64-unknown-linux-musl/release/httpget -o httpget

      - name: Publish the final binary as a release
        run: gh release create --latest -n "Latest version of httpget, compiled for target x86_64-unknown-linux-musl" -t "HttpGet v0.1.${{ github.run_number }}" 0.1.${{ github.run_number }} httpget
